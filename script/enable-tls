#!/bin/bash

# Helper script to enable TLS on your K8s cluster

set -e

# Global Directory Variables
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )" # The directory of this script
REPO_DIR="$(dirname "$SCRIPT_DIR")" # The root directory of this repository

echo "üîí Let's Enable TLS"

read -p "Continue with enabling TLS (y/n)? " CONT
if [ "$CONT" = "y" ]; then
  echo "‚úÖ Approval for TLS accepted";
else
  echo "‚ùå Exiting!";
  exit 1
fi

udpdate_grafana_hostname () {
  read -p "What subdomain for your site would you like to use for grafana (ex: grafana.example.com)? " GRAFANA_HOSTNAME
  sed -i "s/<grafana.example.com>/$GRAFANA_HOSTNAME/g" $REPO_DIR/terraform/k8s/modules/kong/kong-routes.yaml
  echo "‚úÖ Updated the Grafana hostname to: $GRAFANA_HOSTNAME"
}

read -p "Please enter the email you wish to associate with LetsEncrypt (ex: name@example.com): " TLS_EMAIL
sed -i "s/<example-email@example.com>/$TLS_EMAIL/g" $REPO_DIR/terraform/k8s/modules/cert-manager/lets-encrypt.yaml
read -p "What is the main hostname for your site that you would like to use (ex: www.example.com)? " WEB_HOSTNAME
sed -i "s/<www.example.com>/$WEB_HOSTNAME/g" $REPO_DIR/terraform/k8s/modules/kong/kong-routes.yaml
read -p "Do you want to publically expose Grafana (If not, TLS is not needed for Grafana) (y/n)? " GRAFANA_OPTION
if [ "$GRAFANA_OPTION" = "y" ]; then
  read -p "Do you want to IP restrict Grafana(y/n)? " GRAFANA_IP_OPTION
  if [ "$GRAFANA_IP_OPTION" = "y" ]; then
    read -p "Please enter your IP address (IPv4) to allow traffic from (ex: 123.123.123.123): " GRAFANA_IP_ALLOW
    sed -i "s/123.123.123.123/$GRAFANA_IP_ALLOW/g" $REPO_DIR/terraform/k8s/modules/kong/kong-plugins.yaml
    echo "‚úÖ Updated IP allowlist with: $GRAFANA_IP_ALLOW"
    udpdate_grafana_hostname
  else
    udpdate_grafana_hostname
  fi
else
  echo "üëç OK I will ignore all things Grafana for you"
fi

echo "Nice work! Now here comes the manual part (sorry). Scroll through each of the following files and read each text comment carefully to configure your TLS settings:"
echo "  - terraform/k8s/modules/cert-manager/lets-encrypt.yaml"
echo "  - terraform/k8s/modules/kong/kong-routes.yaml"
echo "  - terraform/k8s/modules/kong/kong-plugins.yaml"

echo -e "\n You will also need to update your DNS records to point to your new hostname(s) for TLS to work correctly. Here are examples of the the DNS records you will need to create assuming you enabled TLS and public routing for www.example.com and grafana.example.com:"
echo "  - Type: A     | Key: proxy.example.com   | Value: <kong proxy external IP>"
echo "  - Type: CNAME | Key: www.example.com     | Value: proxy.example.com"
echo "  - Type: CNAME | Key: grafana.example.com | Value: proxy.example.com"

read -p "Type 'y' to continue once you have completed the steps above and have your manual TLS settings configured (y/n)? " MANUAL_CONT

if [ "$MANUAL_CONT" = "y" ]; then
  echo "‚úÖ Approval to continue received";
else
  echo "‚ùå Exiting!";
  exit 1
fi

echo "üöÄ Let's attempt a deploy with TLS!"

k8s_success () {

  echo -e "‚úÖ All manifests applied successfully\n"
  echo -e "üîí TLS should be enabled shortly (a minute or less)"
  echo -e "‚ú® Done! ‚ú®"
}

k8s_apply () {
  echo "üöÄ Deploying 'terraform/k8s'..."
  terraform init || exit 1
  terraform apply -auto-approve || exit 1
  echo "‚úÖ terraform/k8s deployed"
}

cd $REPO_DIR/terraform/k8s

# Apply all the manifests in the k8s/ directory
set +e
while true
do
  k8s_apply
  if [ $? -ne 0 ]; then
    echo "üí° A possible race condition occured. Sleeping and trying again... Hint: press 'ctrl+c' to abort the retry loop"
    sleep 5
  else
    k8s_success
    break
  fi
done
